00 000 000 NOP
00 RP0 001 LXI 3
  # LXI RP, arg16
  this.loadImmU16(RP_NAME, arg16);
00 RP1 001 DAD
  # DAD RP
  this.dad(RP_NAME);
00 000 010 STAX_B
  # STAX bc
  RP_MEM = this.a;
00 010 010 STAX_D
  # STAX de
  RP_MEM = this.a;
00 100 010 SHLD 3
  # SHLD addr
  this.storeU16(arg16, this.rpValue('hl'));
00 110 010 STA 3
  # STA addr
  mref = this.a;
00 001 010 LDAX_BC
  # LDAX RP
  this.a = RP_MEM;
00 011 010 LDAX_DE
  # LDAX RP
  this.a = RP_MEM;
00 101 010 LHLD 3
  # LHLD addr
  this.loadU16('hl', arg16);
00 111 010 LDA 3
  # LDA addr
  this.a = mref;
00 RP0 011 INX
  # INX RP
  this.loadImmU16(RP_NAME, (RP_VAL + 1) & 0xffff);
00 RP1 011 DCX
  # DCX RP
  this.loadImmU16(RP_NAME, (RP_VAL - 1) & 0xffff);
00 DDD 100 INR
  # INR DDD
  DDD = this.inr(DDD);
00 DDD 101 DCR
  # DCR DDD
  DDD = this.dcr(DDD);
00 DDD 110 MVI 2
  # MVI DDD, db
  DDD = db;
00 000 111 RLC
  var msb = (this.a & 0x80) != 0;
  this.setFlag(CARRY, msb);
  this.a = ((this.a << 1) & 0xff) | msb;
00 001 111 RRC
  var lsb = (this.a & 0x01) != 0;
  this.setFlag(CARRY, lsb);
  this.a = ((this.a >> 1) & 0xff) | (lsb * 0x80);
00 010 111 RAL
  var msb = (this.a & 0x80) != 0;
  var c = this.getFlag(CARRY);
  this.setFlag(CARRY, msb);
  this.a = ((this.a << 1) & 0xff) | c;
00 011 111 RAR
  var lsb = (this.a & 0x01) != 0;
  var c = this.getFlag(CARRY);
  this.setFlag(CARRY, lsb);
  this.a = ((this.a >> 1) & 0xff) | (c * 0x80);
00 100 111 DAA
  this.daa();
00 101 111 CMA
  this.a = ~this.a;
00 110 111 STC
  this.setFlag(CARRY, true);
00 111 111 CMC
  this.setFlag(CARRY, !this.getFlag(CARRY));
01 110 110 HLT
  this.running = false;
01 DDD SSS MOV
  # MOV DDD, SSS
  DDD = SSS;

10 000 SSS ADD
  # ADD SSS
  this.a = this.add(this.a, SSS, true);
10 001 SSS ADC
  # ADC SSS
  this.a = this.add(this.a + this.getFlag(CARRY), SSS, true);
10 010 SSS SUB
  # SUB SSS
  this.a = this.sub(this.a, SSS, true);
10 011 SSS SBB
  # SBB SSS
  this.a = this.sub(this.a, SSS + this.getFlag(CARRY), true);
10 100 SSS ANA
  # ANA SSS
  this.a = this.zsp(this.a & SSS);
  this.setFlag(CARRY, false);
  this.setFlag(AUX_CARRY, false);
10 101 SSS XRA
  # XRA SSS
  this.a = this.zsp(this.a ^ SSS);
  this.setFlag(CARRY, false);
  this.setFlag(AUX_CARRY, false);
10 110 SSS ORA
  # ORA SSS
  this.a = this.zsp(this.a | SSS);
  this.setFlag(CARRY, false);
  this.setFlag(AUX_CARRY, false);
10 111 SSS CMP
  # CMP SSS
  this.sub(this.a, SSS, true);
  if ((this.a & 0x80) != (SSS & 0x80))
    this.setFlag(CARRY, !this.getFlag(CARRY));

11 CCC 000 RET 1 0
  # R$CCC
  if (this.cond(CCC)) {
    this.pc = this.popU16();
  } else {
    this.pc += 1;
  }

11 RP0 001 POP
  # POP RP
  this.pop(RP_NAME);

11 001 001 RET 1 0
  this.pc = this.popU16();
11 011 001 NOT_USED
11 101 001 PCHL 1 0
  this.pc = this.rpValue('hl');
11 111 001 SPHL
  this.loadImmU16('sp', this.rpValue('hl'));

11 CCC 010 JMP 3 0
  # J$CCC addr
  if (this.cond(CCC)) {
    this.pc = arg16;
  } else {
    this.pc += 3;
  }

11 000 011 JMP 3 0
  # JMP addr
  this.pc = arg16;
11 001 011 NOT_USED
11 010 011 OUT
11 011 011 IN
11 100 011 XTHL
  var l = this.l;
  var h = this.h;
  this.l = this.mem[this.sp];
  this.h = this.mem[(this.sp + 1) & 0xff];
  this.mem[this.sp] = l;
  this.mem[(this.sp + 1) & 0xff] = h;
11 101 011 XCHG
  var d = this.d;
  var e = this.e;
  this.d = this.h;
  this.e = this.l;
  this.h = d;
  this.l = e;
11 110 011 DI
11 111 011 EI

11 CCC 100 CALL 3 0
  # C$CCC addr
  var nextPc = (this.pc + 3) & 0xffff;
  if (this.cond(CCC)) {
    this.pc = arg16;
    this.pushU16(nextPc);
  } else {
    this.pc = nextPc;
  }

11 RP0 101 PUSH
  # PUSH RP
  this.push(RP_NAME);

11 001 101 CALL 3 0
  # CALL addr
  var nextPc = (this.pc + 3) & 0xffff;
  this.pc = arg16;
  this.pushU16(nextPc);
11 011 101 NOT_USED
11 101 101 NOT_USED
11 111 101 NOT_USED

11 000 110 ADI 2
  this.a = this.add(this.a, db, true);
11 001 110 ACI 2
  this.a = this.add(this.a, db + this.getFlag(CARRY), true);
11 010 110 SUI 2
  this.a = this.sub(this.a, db, true);
11 011 110 SBI 2
  this.a = this.sub(this.a, db + this.getFlag(CARRY), true);
11 100 110 ANI 2
  this.a &= db;
  this.zsp(this.a);
  this.setFlag(CARRY, false);
11 101 110 XRI 2
  this.a ^= db;
  this.zsp(this.a);
  this.setFlag(CARRY, false);
11 110 110 ORI 2
  this.a |= db;
  this.zsp(this.a);
  this.setFlag(CARRY, false);
11 111 110 CPI 2
  this.sub(this.a, db, true);
  if ((this.a & 0x80) != (db & 0x80))
    this.setFlag(CARRY, !this.getFlag(CARRY));

11 PPP 111 RST

xx xxx xxx UNK
